{"ast":null,"code":"import _regeneratorRuntime from\"F:/react-firebase-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"F:/react-firebase-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"F:/react-firebase-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import'./App.css';import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';import'firebase/analytics';import{useAuthState}from'react-firebase-hooks/auth';import{useCollectionData}from'react-firebase-hooks/firestore';firebase.initializeApp({// your config\napiKey:\"AIzaSyCn3cSLv4QHofbRhuBUcXhopbFLA7sfWlA\",authDomain:\"friendschat-a7775.firebaseapp.com\",databaseURL:\"https://friendschat-a7775.firebaseio.com/\",projectId:\"friendschat-a7775\",storageBucket:\"friendschat-a7775.appspot.com\",messagingSenderId:\"518349653230\",appId:\"1:518349653230:web:4c1f243e151fefb3a71fff\",measurementId:\"G-L231HHVN2H\"});var auth=firebase.auth();var firestore=firebase.firestore();var analytics=firebase.analytics();function App(){var _useAuthState=useAuthState(auth),_useAuthState2=_slicedToArray(_useAuthState,1),user=_useAuthState2[0];return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{class:\"material-icons\",children:\"chat_bubble_outline\"}),\"Friend Chat\"]}),/*#__PURE__*/_jsx(\"getProfilePicUrl\",{}),/*#__PURE__*/_jsx(\"getUserName\",{}),/*#__PURE__*/_jsx(SignOut,{})]}),/*#__PURE__*/_jsx(\"section\",{children:user?/*#__PURE__*/_jsx(ChatRoom,{}):/*#__PURE__*/_jsx(SignIn,{})})]});}function SignIn(){var signInWithGoogle=function signInWithGoogle(){var provider=new firebase.auth.GoogleAuthProvider();auth.signInWithPopup(provider);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"sign-in\",onClick:signInWithGoogle,children:\"Sign in with Google\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Do not violate the community guidelines or you will be banned for life!\"})]});}function SignOut(){return auth.currentUser&&/*#__PURE__*/_jsx(\"button\",{className:\"sign-out\",onClick:function onClick(){return auth.signOut();},children:\"Sign Out\"});}function ChatRoom(){var dummy=useRef();var messagesRef=firestore.collection('messages');var query=messagesRef.orderBy('createdAt').limit(25);var _useCollectionData=useCollectionData(query,{idField:'id'}),_useCollectionData2=_slicedToArray(_useCollectionData,1),messages=_useCollectionData2[0];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),formValue=_useState2[0],setFormValue=_useState2[1];/*const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }*/function sendMessage(_x){return _sendMessage.apply(this,arguments);}function _sendMessage(){_sendMessage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(messageText){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;return _context.abrupt(\"return\",messagesRef.add({name:getUserName(),text:messageText,profilePicUrl:getProfilePicUrl(),timestamp:firebase.firestore.FieldValue.serverTimestamp()}));case 4:_context.prev=4;_context.t0=_context[\"catch\"](0);console.error('Error writing new message to database',_context.t0);case 7:case\"end\":return _context.stop();}}},_callee,null,[[0,4]]);}));return _sendMessage.apply(this,arguments);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"main\",{children:[messages&&messages.map(function(msg){return/*#__PURE__*/_jsx(ChatMessage,{message:msg},msg.id);}),/*#__PURE__*/_jsx(\"span\",{ref:dummy})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendMessage,children:[/*#__PURE__*/_jsx(\"input\",{value:formValue,onChange:function onChange(e){return setFormValue(e.target.value);},placeholder:\"say something nice\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!formValue,children:\"\\uD83D\\uDD4A\\uFE0F\"})]})]});}function getProfilePicUrl(){var userPhoto=firebase.auth().currentUser.photoURL||'/images/profile_placeholder.png';return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:userPhoto,children:/*#__PURE__*/_jsx(\"img\",{src:userPhoto,alt:\"userImage\"})})});}// Returns the signed-in user's display name.\nfunction getUserName(){var userName=firebase.auth().currentUser.displayName;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h3\",{className:userName,children:userName})})});}// Saves the messaging device token to the datastore.\nfunction saveMessagingDeviceToken(){firebase.messaging().getToken().then(function(currentToken){if(currentToken){console.log('Got FCM device token:',currentToken);// Saving the Device Token to the datastore.\nfirebase.firestore().collection('fcmTokens').doc(currentToken).set({uid:firebase.auth().currentUser.uid});}else{// Need to request permissions to show notifications.\nrequestNotificationsPermissions();}}).catch(function(error){console.error('Unable to get messaging token.',error);});}// Requests permissions to show notifications.\nfunction requestNotificationsPermissions(){console.log('Requesting notifications permission...');firebase.messaging().requestPermission().then(function(){// Notification permission granted.\nsaveMessagingDeviceToken();}).catch(function(error){console.error('Unable to get permission to notify.',error);});}function ChatMessage(props){var _props$message=props.message,text=_props$message.text,uid=_props$message.uid,photoURL=_props$message.photoURL;var messageClass=uid===auth.currentUser.uid?'sent':'received';return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(messageClass),children:[/*#__PURE__*/_jsx(\"img\",{src:photoURL||'https://api.adorable.io/avatars/23/abott@adorable.png',alt:\"image\"}),/*#__PURE__*/_jsx(\"p\",{children:text})]})});}export default App;","map":{"version":3,"sources":["F:/react-firebase-chat-master/src/App.js"],"names":["React","useRef","useState","firebase","useAuthState","useCollectionData","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","analytics","App","user","SignIn","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","messagesRef","collection","query","orderBy","limit","idField","messages","formValue","setFormValue","sendMessage","messageText","add","name","getUserName","text","profilePicUrl","getProfilePicUrl","timestamp","FieldValue","serverTimestamp","console","error","map","msg","id","e","target","value","userPhoto","photoURL","userName","displayName","saveMessagingDeviceToken","messaging","getToken","then","currentToken","log","doc","set","uid","requestNotificationsPermissions","catch","requestPermission","ChatMessage","props","message","messageClass"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  // your config\n  apiKey: \"AIzaSyCn3cSLv4QHofbRhuBUcXhopbFLA7sfWlA\",\n  authDomain: \"friendschat-a7775.firebaseapp.com\",\n  databaseURL: \"https://friendschat-a7775.firebaseio.com/\",\n  projectId: \"friendschat-a7775\",\n  storageBucket: \"friendschat-a7775.appspot.com\",\n  messagingSenderId: \"518349653230\",\n  appId: \"1:518349653230:web:4c1f243e151fefb3a71fff\",\n  measurementId: \"G-L231HHVN2H\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h3><i class=\"material-icons\">chat_bubble_outline</i>Friend Chat</h3>\n        <getProfilePicUrl />\n        <getUserName />\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  /*const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }*/\n\n  async function sendMessage(messageText) {\n    // Add a new message entry to the database.\n    try {\n      return messagesRef.add({\n        name: getUserName(),\n        text: messageText,\n        profilePicUrl: getProfilePicUrl(),\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error writing new message to database', error);\n    }\n  }\n\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n      <button type=\"submit\" disabled={!formValue}>🕊️</button>\n\n    </form>\n  </>)\n}\n\nfunction getProfilePicUrl() {\n  const userPhoto =  firebase.auth().currentUser.photoURL || '/images/profile_placeholder.png';\n\n  return (<>\n    <div className={userPhoto}>\n      <img src={userPhoto} alt=\"userImage\"/>\n    </div>\n  </>)\n}\n\n// Returns the signed-in user's display name.\nfunction getUserName() {\n  const userName = firebase.auth().currentUser.displayName;\n\n  return (<>\n    <div>\n      <h3 className={userName}>{userName}</h3>\n    </div>\n  </>)\n}\n\n// Saves the messaging device token to the datastore.\nfunction saveMessagingDeviceToken() {\n  firebase.messaging().getToken().then(function(currentToken) {\n    if (currentToken) {\n      console.log('Got FCM device token:', currentToken);\n      // Saving the Device Token to the datastore.\n      firebase.firestore().collection('fcmTokens').doc(currentToken)\n          .set({uid: firebase.auth().currentUser.uid});\n    } else {\n      // Need to request permissions to show notifications.\n      requestNotificationsPermissions();\n    }\n  }).catch(function(error){\n    console.error('Unable to get messaging token.', error);\n  });\n}\n\n// Requests permissions to show notifications.\nfunction requestNotificationsPermissions() {\n  console.log('Requesting notifications permission...');\n  firebase.messaging().requestPermission().then(function() {\n    // Notification permission granted.\n    saveMessagingDeviceToken();\n  }).catch(function(error) {\n    console.error('Unable to get permission to notify.', error);\n  });\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"image\" />\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}